#Retrieve CVEs from NIST 
import requests
import json
import google.generativeai as genai
import os

print("Enter the key to search: ", end="")
#Getting url from prompt
search_key = input()
print("Enter the date range to search (i.e. 2024-01-01:2024-02-22): ", end="")
#Getting url from prompt
range_date = input()
dates = range_date.split(":")
print ("Query used for this call: https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=" + search_key + "&lastModStartDate=" + dates[0] + "T00:00:01.000%2B01:00&lastModEndDate=" + dates[1] + "T23:59:00.000%2B01:00")
api_url = "https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=" + search_key + "&lastModStartDate=" + dates[0] + "T00:00:01.000%2B01:00&lastModEndDate=" + dates[1] + "T23:59:00.000%2B01:00"
response = requests.get(api_url)
response.json()
#Print values from GET method
print (response)

#Print JSON - better reading
response_dict = response.json()
print (json.dumps(response_dict, indent=4, sort_keys=True))

#Also, saving results to CVE_query.json file
with open('CVE_query.json', 'w', encoding='utf-8') as f:
    json.dump(response_dict, f, ensure_ascii=False, indent=4)

if os.environ["GOOGLE_API_KEY"]:
    print ("Getting insights from the Json file")
    print("Add here the question to AI such as - What are the main risks in from the cve list?: ", end="")
    ai_question = input()

    genai.configure(api_key=os.environ["GOOGLE_API_KEY"])
    model = genai.GenerativeModel(model_name="gemini-1.0-pro-latest")
    res = model.generate_content([ai_question, response.text])

    print("This is what Gemini AI said: ")
    print(res.text)